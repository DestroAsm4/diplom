version: "3.8"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  api:
    build: .
    env_file: .env
    environment:
      DB_HOST: postgres
      DEBUG: True
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./todolist/:/app/
    command: python manage.py runserver 0.0.0.0:8000

  migrations:
    build: .
    env_file: .env
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  bot:
    build: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/app/.env
    command: python manage.py runbot

  postgres:
    image: postgres:15.1-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - todoapp_data:/var/lib/postgresql/data/

volumes:
  todoapp_data: